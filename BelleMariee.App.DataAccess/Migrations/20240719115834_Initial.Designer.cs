// <auto-generated />
using System;
using BelleMariee.App.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BelleMariee.App.DataAccess.Migrations
{
    [DbContext(typeof(BelleDbContext))]
    [Migration("20240719115834_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BelleMariee.App.DataAccess.Identity.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("BelleMariee.App.DataAccess.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1554),
                            IsDeleted = false,
                            Name = "After"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1556),
                            IsDeleted = false,
                            Name = "AKesim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1557),
                            IsDeleted = false,
                            Name = "Balık"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1558),
                            IsDeleted = false,
                            Name = "Helen"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1558),
                            IsDeleted = false,
                            Name = "Modern"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1559),
                            IsDeleted = false,
                            Name = "Nikah"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1560),
                            IsDeleted = false,
                            Name = "Prenses"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1561),
                            IsDeleted = false,
                            Name = "UzunK"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1562),
                            IsDeleted = false,
                            Name = "Buket"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1563),
                            IsDeleted = false,
                            Name = "Duvak"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1563),
                            IsDeleted = false,
                            Name = "Tac"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1564),
                            IsDeleted = false,
                            Name = "Ayakkabı"
                        });
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("/images/product/default1.jpg");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1595),
                            Description = "After 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "After 1",
                            Price = 40000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1603),
                            Description = "After 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "After 2",
                            Price = 45000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1605),
                            Description = "After 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "After 3",
                            Price = 42000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1608),
                            Description = "AKesim 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "AKesim 1",
                            Price = 38000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1609),
                            Description = "AKesim 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "AKesim 2",
                            Price = 39000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1611),
                            Description = "AKesim 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "AKesim 3",
                            Price = 41000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1613),
                            Description = "Balık 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Balık 1",
                            Price = 42000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1615),
                            Description = "Balık 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Balık 2",
                            Price = 43000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1617),
                            Description = "Balık 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Balık 3",
                            Price = 44000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1619),
                            Description = "Helen 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Helen 1",
                            Price = 35000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1621),
                            Description = "Helen 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Helen 2",
                            Price = 36000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1623),
                            Description = "Helen 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Helen 3",
                            Price = 37000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1625),
                            Description = "Modern 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Modern 1",
                            Price = 46000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1627),
                            Description = "Modern 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Modern 2",
                            Price = 47000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1629),
                            Description = "Modern 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Modern 3",
                            Price = 48000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1631),
                            Description = "Nikah 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Nikah 1",
                            Price = 31000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1633),
                            Description = "Nikah 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Nikah 2",
                            Price = 32000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1635),
                            Description = "Nikah 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Nikah 3",
                            Price = 33000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1663),
                            Description = "Prenses 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Prenses 1",
                            Price = 49000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1665),
                            Description = "Prenses 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Prenses 2",
                            Price = 50000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1667),
                            Description = "Prenses 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Prenses 3",
                            Price = 51000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 8,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1669),
                            Description = "UzunK 1 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "UzunK 1",
                            Price = 34000m,
                            ProductTypeId = 1,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 8,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1671),
                            Description = "UzunK 2 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "UzunK 2",
                            Price = 35000m,
                            ProductTypeId = 1,
                            Size = "40",
                            Stock = 2,
                            UserId = 0
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 8,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1673),
                            Description = "UzunK 3 Gelinlik",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "UzunK 3",
                            Price = 36000m,
                            ProductTypeId = 1,
                            Size = "36",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1675),
                            Description = "Buket 1 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Buket 1",
                            Price = 2000m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 10,
                            UserId = 0
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1677),
                            Description = "Buket 2 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Buket 2",
                            Price = 2500m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 8,
                            UserId = 0
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1679),
                            Description = "Buket 3 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Buket 3",
                            Price = 3000m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 6,
                            UserId = 0
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1681),
                            Description = "Duvak 1 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Duvak 1",
                            Price = 1500m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 10,
                            UserId = 0
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1683),
                            Description = "Duvak 2 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Duvak 2",
                            Price = 2000m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 8,
                            UserId = 0
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1685),
                            Description = "Duvak 3 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Duvak 3",
                            Price = 2500m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 6,
                            UserId = 0
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1687),
                            Description = "Tac 1 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Tac 1",
                            Price = 1700m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 7,
                            UserId = 0
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1688),
                            Description = "Tac 2 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Tac 2",
                            Price = 2100m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 8,
                            UserId = 0
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1690),
                            Description = "Tac 3 Aksesuar",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Tac 3",
                            Price = 200m,
                            ProductTypeId = 2,
                            Size = "Standart",
                            Stock = 6,
                            UserId = 0
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1692),
                            Description = "Ayakkabı 1",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Ayakkabı 1",
                            Price = 3000m,
                            ProductTypeId = 3,
                            Size = "36",
                            Stock = 5,
                            UserId = 0
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1694),
                            Description = "Ayakkabı 2",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Ayakkabı 2",
                            Price = 3500m,
                            ProductTypeId = 3,
                            Size = "37",
                            Stock = 4,
                            UserId = 0
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1696),
                            Description = "Ayakkabı 3",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Ayakkabı 3",
                            Price = 4000m,
                            ProductTypeId = 3,
                            Size = "38",
                            Stock = 3,
                            UserId = 0
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 12,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1697),
                            Description = "Ayakkabı 4",
                            ImageUrl = "/images/product/default1.jpg",
                            ImageUrl2 = "/images/product/default2.jpg",
                            ImageUrl3 = "/images/product/default3.jpg",
                            IsDeleted = false,
                            Name = "Ayakkabı 4",
                            Price = 400m,
                            ProductTypeId = 3,
                            Size = "39",
                            Stock = 2,
                            UserId = 0
                        });
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.ProductSaleDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("ProductSaleDetails");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1390),
                            IsDeleted = false,
                            Name = "Gow"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1401),
                            IsDeleted = false,
                            Name = "Accessory"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 19, 14, 58, 33, 452, DateTimeKind.Local).AddTicks(1402),
                            IsDeleted = false,
                            Name = "Shoe"
                        });
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Product", b =>
                {
                    b.HasOne("BelleMariee.App.Entity.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BelleMariee.App.Entity.Entities.ProductType", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.ProductSaleDetails", b =>
                {
                    b.HasOne("BelleMariee.App.Entity.Entities.Product", "Product")
                        .WithMany("ProductSalesDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BelleMariee.App.Entity.Entities.Sale", "ProductSale")
                        .WithMany("ProductSalesDetails")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductSale");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Sale", b =>
                {
                    b.HasOne("BelleMariee.App.Entity.Entities.Customer", "Customer")
                        .WithMany("ProductSales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("BelleMariee.App.DataAccess.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BelleMariee.App.DataAccess.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BelleMariee.App.DataAccess.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("BelleMariee.App.DataAccess.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BelleMariee.App.DataAccess.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BelleMariee.App.DataAccess.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Customer", b =>
                {
                    b.Navigation("ProductSales");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Product", b =>
                {
                    b.Navigation("ProductSalesDetails");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BelleMariee.App.Entity.Entities.Sale", b =>
                {
                    b.Navigation("ProductSalesDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
