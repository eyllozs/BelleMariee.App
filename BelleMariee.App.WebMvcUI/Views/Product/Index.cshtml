
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutProduct.cshtml";
}
@model List<BelleMariee.App.Entity.ViewModels.ProductViewModel>
@if (Model.Count() > 0)
{
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-4">
                <div class="card mb-3">
                    <form asp-controller="Sepet" asp-action="Ekle" method="get">
                        
                        <div class="card">
                            <img src="@product.ImageUrl" alt="">
                            <div class="card-content">
                                <h4>
                                    @product.Name
                                    
                                </h4>
                                <p>
                                    @string.Format("{0:C2}", @product.Price)
                                </p>
                                <a href="/Product/Details/@product.Id" class="button">
                                    Göz at
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8" />
                                    </svg>
                                    <input type="hidden" name="Id" value="@product.Id" />
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        }

    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        <strong>İstenilen türde ürün bulunmamaktadır.</strong>
    </div>
}
<style>
    row {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 50px;
        font-family: 'Roboto', sans-serif;
    }
    .card {
        width: 20rem;
        height: 27rem;
        border-radius: 10px;
        overflow: hidden;
        cursor: pointer;
        position: relative;
        color: $color-primary-white;
        box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.2);
        img

    {
        position: absolute;
        object-fit: cover;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }

    h4 {
        position: absolute;
        inset: auto auto 30px 30px;
        margin: 0;
        transition: inset .3s .3s ease-out;
        font-family: 'Roboto Condensed', sans-serif;
        font-weight: normal;
        text-transform: uppercase;
    }

    p, a {
        position: absolute;
        opacity: 0;
        max-width: 80%;
        transition: opacity .3s ease-out;
    }

    p {
        inset: auto auto 40px 30px;
    }

    a {
        inset: auto auto 20px 30px;
        color: inherit;
        text-decoration: none;
    }

    &:hover h4 {
        inset: auto auto 100px 30px;
        transition: inset .3s ease-out;
    }

    &:hover img {
        transition: opacity .3s ease-in;
        opacity: 0.7;
    }

    &:hover p, &:hover a {
        opacity: 1;
        transition: opacity .5s .1s ease-in;
    }

    }

    .material-symbols-outlined {
        vertical-align: middle;
    }
 </style>
